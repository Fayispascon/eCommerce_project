<%- include('../adminLayouts/header.ejs') %>
    <%- include('../adminLayouts/pageHeader.ejs') %>

    <section class="content-main">
        <div class="content-header">
            <div>
                <h2 class="content-title card-title">Coupon Management</h2>
                <p>Manage coupons and add new ones</p>
            </div>
        </div>

        <div class="row">
            <!-- Add Coupon Form Section -->
            <div class="col-md-4 mb-4">
                <div class="card">
                    <div class="card-body">
                        <h5 class="card-title">Add New Coupon</h5>
                        <form id="addCouponForm" method="post" novalidate>
                            <!-- Form Fields -->
                            <div class="mb-3">
                                <label for="name" class="form-label">Name</label>
                                <input type="text" class="form-control" id="name" name="name" placeholder="Enter Coupon Name" required>
                                <small id="nameError" class="text-danger"></small>
                            </div>
                            <div class="mb-3">
                                <label for="coupon_code" class="form-label">Coupon Code</label>
                                <input type="text" class="form-control" id="coupon_code" name="couponCode" placeholder="Enter Coupon Code" required>
                                <small id="codeError" class="text-danger"></small>
                            </div>
                            <div class="mb-3">
                                <label for="percentage" class="form-label">Discount Percentage</label>
                                <input type="number" class="form-control" id="percentage" name="percentage" placeholder="Enter percentage" min="1"
                                    max="100" required>
                                <small id="percentageError" class="text-danger"></small>
                            </div>
                            <div class="mb-3">
                                <label for="minimumAmount" class="form-label">Minimum Amount</label>
                                <input type="number" class="form-control" id="minimumAmount" name="minimumAmount"
                                    min="1" placeholder="Enter Minimum Amount" required>
                                <small id="minimumAmountError" class="text-danger"></small>
                            </div>
                            <div class="mb-3">
                                <label for="maxredeemAmount" class="form-label">Maximum Redeem Amount</label>
                                <input type="number" class="form-control" id="maxredeemAmount" name="maxredeemAmount"
                                    min="1" placeholder="Enter Maximum Amount" required>
                                <small id="maxredeemAmountError" class="text-danger"></small>
                            </div>
                            <div class="mb-3">
                                <label for="expiryDate" class="form-label">Expiry Date</label>
                                <input type="date" class="form-control" id="expiryDate" name="expires" required>
                                <small id="expiryDateError" class="text-danger"></small>
                            </div>
                            <div class="mb-3">
                                <label for="status" class="form-label">Status</label>
                                <select class="form-select" id="status" name="status" required>
                                    <option value="true">Active</option>
                                    <option value="false">Deactive</option>
                                </select>
                            </div>
                            <div class="d-grid">
                                <button type="submit" class="btn btn-primary">Add Coupon</button>
                            </div>
                        </form>
                        <div id="successMessage" class="text-success mt-2"></div>
                    </div>
                </div>
            </div>

            <!-- Coupon List Section -->
            <div class="col-md-8 mb-4">
                <div class="card">
                    <div class="card-body">
                        <h5 class="card-title">List of Coupons</h5>
                        <% if (coupons.length===0) { %>
                            <p class="text-info text-center">No coupons found.</p>
                            <% } else { %>
                                <table class="table" id="couponTable">
                                    <thead>
                                        <tr>
                                            <th scope="col">#</th>
                                            <th scope="col">Name</th>
                                            <th scope="col">Coupon Code</th>
                                            <th scope="col">Discount Percentage</th>
                                            <th scope="col">Minimum Amount</th>
                                            <th scope="col">Maximum Redeem Amount</th>
                                            <th scope="col">Expiry Date</th>
                                            <th scope="col">Status</th>
                                            <th scope="col">Actions</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        <% coupons.forEach((coupon, index)=> { %>
                                            <tr>
                                                <th scope="row">
                                                    <%= index + 1 %>
                                                </th>
                                                <td>
                                                    <%= coupon.name %>
                                                </td>
                                                <td>
                                                    <%= coupon.couponCode %>
                                                </td>
                                                <td>
                                                    <%= coupon.percentage %> %
                                                </td>
                                                <td>
                                                    ₹ <%= coupon.minimumAmount %>
                                                </td>
                                                <td>
                                                    ₹ <%= coupon.maxredeemAmount %>
                                                </td>
                                                <td>
                                                    <%= new Date(coupon.expires).toLocaleDateString() %>
                                                </td>
                                                <td>
                                                    <span
                                                        class="<%= coupon.status ? 'badge bg-success' : 'badge bg-danger' %>">
                                                            <%= coupon.status ? 'Active' : 'Deactive' %>
                                                    </span>
                                                </td>
                                                <td>
                                                    <div class="dropdown">
                                                        <button class="btn btn-sm btn-light" id="dropdownMenuButton" type="button" data-bs-toggle="dropdown" aria-expanded="false">
                                                            &#x22EE;
                                                        </button>
                                                        <ul class="dropdown-menu" aria-labelledby="dropdownMenuButton">
                                                            <li>
                                                                <button class="dropdown-item text-info" onclick="couponStatus('<%= coupon._id %>', '<%= coupon.status %>')">
                                                                    <%= coupon.status ? 'Deactivate' : 'Activate' %>
                                                                </button>
                                                            </li>
                                                            <li>
                                                                <button class="dropdown-item text-danger" onclick="deleteCoupon('<%= coupon._id %>', this)">
                                                                    Delete
                                                                </button>
                                                            </li>
                                                        </ul>
                                                        
                                                    </div>
                                                </td>
                                            </tr>
                                            <% }) %>
                                    </tbody>
                                </table>
                                <% } %>
                    </div>
                </div>
            </div>
        </div>
    </section>

    <!-- Popper.js (required for dropdowns and tooltips) -->
<script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.5.4/dist/umd/popper.min.js"></script>

<!-- Bootstrap 5.0.0-beta1 JS -->
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.0-beta1/dist/js/bootstrap.bundle.min.js"></script>

    <script>
        document.addEventListener('DOMContentLoaded', function(){
            document.getElementById('addCouponForm').addEventListener('submit', function(e){
                e.preventDefault();

                const formData = new FormData(this);
                const data = Object.fromEntries(formData.entries());

                clearErrorMessages();

                const isValid = validateForm(data);
                if(!isValid) return;

                fetch(`/admin/addCoupon`, {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify(data)
                })
                .then(response => response.json())
                .then(response => {
                    if(response.success){
                        addCouponRow(response.data);
                        Swal.fire('Success', 'Coupon added succefully', 'success').then(()=>{
                            location.reload();
                        })
                        this.reset();
                    }else{
                        Swal.fire('Error', response.error, 'error');
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                    Swal.fire('Error', 'An unexpected error occurred!', 'error');
                });
            });

            function validateForm(data){
                let valid = true;

                // Validate coupon name:
                if(!data.name || data.name.trim() === ''){
                    document.getElementById('nameError').textContent = 'Name is required';
                    valid = false;
                }else if(data.name[0] === ' ' || data.name.length < 2 || data.name.length > 50){
                    document.getElementById('nameError').textContent = 'Name should be valid and between 2 and 50 character long';
                    valid = false;
                }else{
                    document.getElementById('nameError').textContent = '';
                }

                // Validate coupon code:
                const codePattern = /^[a-zA-Z0-9]+$/;
                if(!data.couponCode){
                    document.getElementById('codeError').textContent = 'Coupon code is required';
                    valid = false;
                }else if(!codePattern.test(data.couponCode)){
                    document.getElementById('codeError').textContent = 'Coupon code should be alphanumeric';
                    valid = false;
                }else{
                    document.getElementById('codeError').textContent = '';
                }

                // Validate coupon percentage:
                if(!data.percentage){
                    document.getElementById('percentageError').textContent = 'Percentage is required';
                    valid = false;
                }else if(isNaN(data.percentage) || data.percentage < 1 || data.percentage > 100){
                    document.getElementById('percentageError').textContent = 'Percentage should be a number and between 1 and 100';
                    valid = false;
                }else{
                    document.getElementById('percentageError').textContent = '';
                }

                // Validate coupon minimum amout:
                if(!data.minimumAmount){
                    document.getElementById('minimumAmoutError').textContent = 'Minimum amount is required';
                    valid = false;
                }else if(isNaN(data.minimumAmount) || data.minimumAmount < 1){
                    document.getElementById('minimumAmountError').textContent = 'Minimum amount must be greater than 0';
                    valid = false;
                }else{
                    document.getElementById('minimumAmountError').textContent = '';
                }

                // Validate coupon maximum amout:
                if(!data.maxredeemAmount){
                    document.getElementById('maxredeemAmountError').textContent = 'Maximum redeem amount required';
                    valid = false;
                }else if(isNaN(data.maxredeemAmount) || data.maxredeemAmount < 1){
                    document.getElementById('maxredeemAmountError').textContent = 'Maximum redeem amout must be greater than 0';
                    valid = false;
                }else{
                    document.getElementById('maxredeemAmountError').textContent = '';
                }

                // Validate coupon expiry date:
                const today = new Date();
                const expiryDate = new Date(data.expires);
                if(!data.expires){
                    document.getElementById('expiryDateError').textContent = 'Expiry date required';
                    valid = false;
                }else if(expiryDate < today){
                    document.getElementById('expiryDateError').textContent = 'Expiry date must be in the future';
                    valid = false;
                }else{
                    document.getElementById('expiryDateError').textContent = '';
                }

                return valid;
            }

            function clearErrorMessages(){
                document.getElementById('nameError').textContent = '';
                document.getElementById('codeError').textContent = '';
                document.getElementById('percentageError').textContent = '';
                document.getElementById('minimumAmountError').textContent = '';
                document.getElementById('maxredeemAmountError').textContent = '';
                document.getElementById('expiryDateError').textContent = '';
            }

            function addCouponRow(coupon){
                const table = document.getElementById('couponTable').getElementsByTagName('tbody')[0];
                const row = table.insertRow();

                row.insertCell(0).textContent = table.rows.length;
                row.insertCell(1).textContent = coupon.name;
                row.insertCell(2).textContent = coupon.couponCode;
                row.insertCell(3).textContent = coupon.percentage;
                row.insertCell(4).textContent = coupon.minimumAmount;
                row.insertCell(5).textContent = coupon.maxredeemAmount;
                row.insertCell(6).textContent = new Date(coupon.expires).toLocaleDateString();

                const statusCell = row.insertCell(7);

                const statusSpan = document.createElement('span');
                statusSpan.textContent = coupon.status ? 'Active' : 'Deactive';

                statusSpan.style.color = 'white';
                statusSpan.style.backgroundColor = coupon.status ? 'green' : 'red';
                statusSpan.style.padding = '5px 10px';
                statusSpan.style.borderRadius = '25px';
                statusSpan.style.textAlign = 'center';
                statusSpan.style.display = 'inline-block';

                statusCell.appendChild(statusSpan);

                const actionCell = row.insertCell(8);
                const dropdown = document.createElement('div');
                dropdown.className = 'dropdown';

                dropdown.innerHTML = `<button class="btn btn-sm btn-light" type="button" data-bs-toggle="dropdown" aria-expanded="false">
          &#x22EE;
        </button>
        <ul class="dropdown-menu">
            <li><button class="dropdown-item text-info" onclick="couponStatus('${coupon._id}', ${coupon.status})">${coupon.status ? 'Deactivate' : 'Activate'}</button></li>
            <li><button class="dropdown-item text-danger" onclick="deleteCoupon('${coupon._id}', this)">Delete</button></li>
        </ul>
     `;

        actionCell.appendChild(dropdown);

        }

        window.couponStatus = function(couponId, currentStatus){
            const newStatus = !currentStatus;

            Swal.fire({
                title: 'Are you sure?',
                text: `You are about to ${newStatus ? 'active' : 'deactivate'} this coupon.`,
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                confirmButtonText: 'Yes, proceed',
                cancelButtonText: 'No, cancel'
            }).then((result) => {
                if(result.isConfirmed){
                    fetch(`/admin/couponStatus/${couponId}`,{
                        method: 'POST',
                        headers: { 'Content-Type': 'application/json' },
                        body: JSON.stringify({ status: newStatus})
                    })
                    .then(response => response.json())
                    .then(data => {
                        if(data.success){
                            Swal.fire('Success', 'Coupon status updated successfully', 'success').then(() =>{
                                location.reload();
                            });
                        }else{
                            Swal.fire('Error', 'Failed to update status', 'error');
                        }
                    })
                    .catch(error => {
                        Swal.fire('Error', 'An error occurred while updating status!', 'error');
                    });
                }
            });
        };

        window.deleteCoupon = function(couponId, element){
            Swal.fire({
                title: 'Are you sure?',
                text: 'Do you really want to delete this coupon?',
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#d33',
                cancelButtonColor: '#3085d6',
                confirmButtonText: 'Yes, delete it',
                cancelButtonText: 'No, cancel'
            })
            .then((result) => {
                if(result.isConfirmed){
                    fetch(`/admin/deleteCoupon/${couponId}`,{
                        method: 'POST',
                        headers: {'Content-Type': 'application/json'},
                    })
                    .then(response => response.json())
                    .then(response => {
                        if(response.success){
                            Swal.fire('Deleted', 'Coupon deleted successfully!', 'success')
                            const row = element.closest('tr');
                            row.remove();
                        }else{
                            Swal.fire('Error', 'Failed to delete the offer', 'error')
                        }
                    })
                    .catch(error => {
                        console.log('Error:', error);
                        Swal.fire('Error', 'An error occurred while deleting the offer', 'error');
                    });
                }
            });
        };

        });


    </script>

    <%- include('../adminLayouts/pageFooter.ejs') %>
            <%- include('../adminLayouts/footer.ejs') %>